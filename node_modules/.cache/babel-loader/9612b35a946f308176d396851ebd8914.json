{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User.LAPTOP-EJ88NT12\\\\Desktop\\\\udemy_react_stylingComponent\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./CourseInput.module.css\";\nimport Button from \"../../UI/Button/Button\"; ////這邊是用style-components的寫法來動態判斷是否要加入invalid class\n// import styled from 'styled-components';\n// const FormControled = styled.div`\n//     margin: 0.5rem 0;\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${(props) => (props.invalid ? \"red\" : \"black\")}\n//   }\n//   & input {\n//     display: block;\n//     width: 100%;\n//     //以下的props是透過下面自製的FormControl component的屬性而來的,我們可以透過function來取得invalid這個屬性，再去做判斷\n//     border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\n//     background: ${(props) => (props.invalid ? \"#fcdada\" : \"transparent\")};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  ////取得使用者輸入資料\n  const [enteredValue, setEnteredValue] = useState(\"\"); //// 設定使用者是否有輸入的狀態，預設一開始為有輸入，所以寫true\n\n  const [isValid, setIsValid] = useState(true); ////使用者輸入時會觸發以下function\n\n  const goalInputChangeHandler = event => {\n    // 使用者有輸入東西的話，isValid狀態就更新為true，這樣下面的樣式判斷就不會讓輸入框出現紅色邊框\n    setIsValid(true);\n    setEnteredValue(event.target.value);\n  }; ////使用者點擊送出按鈕時會觸發以下function\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // 如果輸入的長度扣除掉前後的空格還是為0的話(沒輸入東西)，就return空值，讓下面的props.onAddGoal無法被執行\n\n    if (enteredValue.trim().length === 0) {\n      // 因為使用者沒輸入東西，所以將驗證(isValid)設定為false，及代表不通過\n      setIsValid(false);\n      return;\n    } //如果有資料的話，就把資料透過參數的方式傳到App.js裡\n\n\n    props.onAddGoal(enteredValue); //送出後將input裡面清空\n\n    setEnteredValue(\"\");\n  };\n\n  return (\n    /*#__PURE__*/\n    ////這個例子是用styled-components來增加動態class的寫法\n    // <form onSubmit={formSubmitHandler}>\n    //   {/* className判斷是，如果使用者沒輸入東西，就會先跑到上面的if判斷，因此isValid的狀態就會被設為false。\n    //     接著這邊再用三元運算子判斷是否要加入invalid class */}\n    //   <FormControled invalid={!isValid}>\n    //     <label>Course Goal</label>\n    //     <input\n    //       type=\"text\"\n    //       onChange={goalInputChangeHandler}\n    //       value={enteredValue}\n    //     />\n    //   </FormControled>\n    //   <Button type=\"submit\">Add Goal</Button>\n    // </form>\n    ////這邊是用css module來寫動態css\n    _jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles['form-control']} ${!isValid && styles.invalid}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: goalInputChangeHandler,\n          value: enteredValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"names":["React","useState","styles","Button","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","length","onAddGoal","invalid"],"sources":["C:/Users/User.LAPTOP-EJ88NT12/Desktop/udemy_react_stylingComponent/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./CourseInput.module.css\";\nimport Button from \"../../UI/Button/Button\";\n\n////這邊是用style-components的寫法來動態判斷是否要加入invalid class\n// import styled from 'styled-components';\n// const FormControled = styled.div`\n//     margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${(props) => (props.invalid ? \"red\" : \"black\")}\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n\n//     //以下的props是透過下面自製的FormControl component的屬性而來的,我們可以透過function來取得invalid這個屬性，再去做判斷\n//     border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\n//     background: ${(props) => (props.invalid ? \"#fcdada\" : \"transparent\")};\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n// `;\n\nconst CourseInput = (props) => {\n  ////取得使用者輸入資料\n  const [enteredValue, setEnteredValue] = useState(\"\");\n\n  //// 設定使用者是否有輸入的狀態，預設一開始為有輸入，所以寫true\n  const [isValid, setIsValid] = useState(true);\n\n  ////使用者輸入時會觸發以下function\n  const goalInputChangeHandler = (event) => {\n    // 使用者有輸入東西的話，isValid狀態就更新為true，這樣下面的樣式判斷就不會讓輸入框出現紅色邊框\n    setIsValid(true);\n    setEnteredValue(event.target.value);\n  };\n\n  ////使用者點擊送出按鈕時會觸發以下function\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // 如果輸入的長度扣除掉前後的空格還是為0的話(沒輸入東西)，就return空值，讓下面的props.onAddGoal無法被執行\n    if (enteredValue.trim().length === 0) {\n      // 因為使用者沒輸入東西，所以將驗證(isValid)設定為false，及代表不通過\n      setIsValid(false);\n      return;\n    }\n    //如果有資料的話，就把資料透過參數的方式傳到App.js裡\n    props.onAddGoal(enteredValue);\n    //送出後將input裡面清空\n    setEnteredValue(\"\");\n  };\n\n  return (\n    ////這個例子是用styled-components來增加動態class的寫法\n    // <form onSubmit={formSubmitHandler}>\n    //   {/* className判斷是，如果使用者沒輸入東西，就會先跑到上面的if判斷，因此isValid的狀態就會被設為false。\n    //     接著這邊再用三元運算子判斷是否要加入invalid class */}\n    //   <FormControled invalid={!isValid}>\n    //     <label>Course Goal</label>\n    //     <input\n    //       type=\"text\"\n    //       onChange={goalInputChangeHandler}\n    //       value={enteredValue}\n    //     />\n    //   </FormControled>\n    //   <Button type=\"submit\">Add Goal</Button>\n    // </form>\n\n\n    ////這邊是用css module來寫動態css\n    <form onSubmit={formSubmitHandler}>\n      {/* className判斷是，如果使用者沒輸入東西，就會先跑到上面的if判斷，因此isValid的狀態就會被設為false。\n        接著這邊再用三元運算子判斷是否要加入invalid class */}\n      <div className={`${styles['form-control']} ${!isValid && styles.invalid}`}>\n        <label>Course Goal</label>\n        <input\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n          value={enteredValue}\n        />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAF6B,CAI7B;;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC,CAL6B,CAO7B;;EACA,MAAMS,sBAAsB,GAAIC,KAAD,IAAW;IACxC;IACAF,UAAU,CAAC,IAAD,CAAV;IACAF,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACD,CAJD,CAR6B,CAc7B;;;EACA,MAAMC,iBAAiB,GAAIH,KAAD,IAAW;IACnCA,KAAK,CAACI,cAAN,GADmC,CAEnC;;IACA,IAAIT,YAAY,CAACU,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;MACpC;MACAR,UAAU,CAAC,KAAD,CAAV;MACA;IACD,CAPkC,CAQnC;;;IACAJ,KAAK,CAACa,SAAN,CAAgBZ,YAAhB,EATmC,CAUnC;;IACAC,eAAe,CAAC,EAAD,CAAf;EACD,CAZD;;EAcA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;MAAM,QAAQ,EAAEO,iBAAhB;MAAA,wBAGE;QAAK,SAAS,EAAG,GAAEZ,MAAM,CAAC,cAAD,CAAiB,IAAG,CAACM,OAAD,IAAYN,MAAM,CAACiB,OAAQ,EAAxE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,QAAQ,EAAET,sBAFZ;UAGE,KAAK,EAAEJ;QAHT;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAWE,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EAlBF;AAgCD,CA7DD;;GAAMF,W;;KAAAA,W;AA+DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}